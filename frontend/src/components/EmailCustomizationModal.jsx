import React, { useState, useEffect } from 'react';
import './EmailCustomizationModal.css';

const EmailCustomizationModal = ({ 
  isOpen, 
  onClose, 
  onSend, 
  eventData, 
  groupData,
  isLoading 
}) => {
  const [emailContent, setEmailContent] = useState({
    subject: '',
    subtitle: '',
    customMessage: ''
  });

  // Kh·ªüi t·∫°o n·ªôi dung m·∫∑c ƒë·ªãnh khi modal m·ªü
  useEffect(() => {
    if (isOpen && eventData) {
      setEmailContent({
        subject: `S·ª± ki·ªán m·ªõi: ${eventData.name}`,
        subtitle: 'Nh√≥m tr∆∞·ªüng v·ª´a t·∫°o m·ªôt s·ª± ki·ªán m·ªõi. H√£y xem th√¥ng tin chi ti·∫øt v√† chu·∫©n b·ªã tham gia!',
        customMessage: ''
      });
    }
  }, [isOpen, eventData]);

  const handleSubmit = (e) => {
    e.preventDefault();
    onSend(emailContent);
  };

  const handleReset = () => {
    if (eventData) {
      setEmailContent({
        subject: `S·ª± ki·ªán m·ªõi: ${eventData.name}`,
        subtitle: 'Nh√≥m tr∆∞·ªüng v·ª´a t·∫°o m·ªôt s·ª± ki·ªán m·ªõi. H√£y xem th√¥ng tin chi ti·∫øt v√† chu·∫©n b·ªã tham gia!',
        customMessage: ''
      });
    }
  };

  if (!isOpen) return null;

  return (
    <div className="email-modal-overlay">
      <div className="email-modal-container">
        <div className="email-modal-header">
          <h2>T√πy ch·ªânh n·ªôi dung email</h2>
          <button 
            className="email-modal-close-btn"
            onClick={onClose}
            disabled={isLoading}
          >
            √ó
          </button>
        </div>

        <form onSubmit={handleSubmit} className="email-modal-form">
          {/* Th√¥ng tin c·ªë ƒë·ªãnh */}
          <div className="email-fixed-info">
            <h3>Th√¥ng tin s·ª± ki·ªán (kh√¥ng th·ªÉ ch·ªânh s·ª≠a)</h3>
            <div className="fixed-info-grid">
              <div className="info-item">
                <strong>T√™n nh√≥m:</strong> {groupData?.name}
              </div>
              <div className="info-item">
                <strong>T√™n s·ª± ki·ªán:</strong> {eventData?.name}
              </div>
              <div className="info-item">
                <strong>Th·ªùi gian:</strong> {eventData?.time || 'S·∫Ω ƒë∆∞·ª£c th√¥ng b√°o sau'}
              </div>
              <div className="info-item">
                <strong>ƒê·ªãa ƒëi·ªÉm:</strong> {eventData?.venue || 'S·∫Ω ƒë∆∞·ª£c th√¥ng b√°o sau'}
              </div>
            </div>
          </div>

          {/* N·ªôi dung c√≥ th·ªÉ ch·ªânh s·ª≠a */}
          <div className="email-editable-content">
            <h3>N·ªôi dung c√≥ th·ªÉ t√πy ch·ªânh</h3>
            
            <div className="form-group">
              <label htmlFor="subject">Ti√™u ƒë·ªÅ email:</label>
              <input
                type="text"
                id="subject"
                value={emailContent.subject}
                onChange={(e) => setEmailContent(prev => ({
                  ...prev,
                  subject: e.target.value
                }))}
                placeholder="Nh·∫≠p ti√™u ƒë·ªÅ email..."
                maxLength={100}
                required
              />
              <small>{emailContent.subject.length}/100 k√Ω t·ª±</small>
            </div>

            <div className="form-group">
              <label htmlFor="subtitle">Ph·ª• ƒë·ªÅ/M√¥ t·∫£ ng·∫Øn:</label>
              <textarea
                id="subtitle"
                value={emailContent.subtitle}
                onChange={(e) => setEmailContent(prev => ({
                  ...prev,
                  subtitle: e.target.value
                }))}
                placeholder="Nh·∫≠p ph·ª• ƒë·ªÅ ho·∫∑c m√¥ t·∫£ ng·∫Øn..."
                rows={3}
                maxLength={300}
                required
              />
              <small>{emailContent.subtitle.length}/300 k√Ω t·ª±</small>
            </div>

            <div className="form-group">
              <label htmlFor="customMessage">N·ªôi dung b·ªï sung (t√πy ch·ªçn):</label>
              <textarea
                id="customMessage"
                value={emailContent.customMessage}
                onChange={(e) => setEmailContent(prev => ({
                  ...prev,
                  customMessage: e.target.value
                }))}
                placeholder="Th√™m th√¥ng tin b·ªï sung, l∆∞u √Ω ƒë·∫∑c bi·ªát, y√™u c·∫ßu chu·∫©n b·ªã..."
                rows={5}
                maxLength={500}
              />
              <small>{emailContent.customMessage.length}/500 k√Ω t·ª±</small>
            </div>
          </div>

          {/* Preview */}
          <div className="email-preview">
            <h3>Xem tr∆∞·ªõc email</h3>
            <div className="preview-container">
              <div className="preview-subject">
                <strong>Ti√™u ƒë·ªÅ:</strong> {emailContent.subject}
              </div>
              <div className="preview-content">
                <h4>{emailContent.subject.replace('üìÖ S·ª± ki·ªán m·ªõi: ', '')}</h4>
                <div className="event-info">
                  <p><strong>Nh√≥m:</strong> {groupData?.name}</p>
                  <p><strong>Th·ªùi gian:</strong> {eventData?.time || 'S·∫Ω ƒë∆∞·ª£c th√¥ng b√°o sau'}</p>
                  <p><strong>ƒê·ªãa ƒëi·ªÉm:</strong> {eventData?.venue || 'S·∫Ω ƒë∆∞·ª£c th√¥ng b√°o sau'}</p>
                </div>
                <p className="subtitle">{emailContent.subtitle}</p>
                {emailContent.customMessage && (
                  <div className="custom-message">
                    <p><strong>Th√¥ng tin b·ªï sung:</strong></p>
                    <p>{emailContent.customMessage}</p>
                  </div>
                )}
              </div>
            </div>
          </div>

          {/* Buttons */}
          <div className="email-modal-actions">
            <button 
              type="button" 
              className="btn-reset"
              onClick={handleReset}
              disabled={isLoading}
            >
              ƒê·∫∑t l·∫°i m·∫∑c ƒë·ªãnh
            </button>
            <button 
              type="button" 
              className="btn-cancel"
              onClick={onClose}
              disabled={isLoading}
            >
              H·ªßy
            </button>
            <button 
              type="submit" 
              className="btn-send"
              disabled={isLoading}
            >
              {isLoading ? 'ƒêang g·ª≠i...' : 'G·ª≠i email'}
            </button>
          </div>
        </form>
      </div>
    </div>
  );
};

export default EmailCustomizationModal; 