import api from './api';
import SuggestionService from './suggestionService';

const locationPreferenceService = {
  // L·∫•y location v√† preferences c·ªßa user trong m·ªôt group
  getUserLocationPreferences: async (groupId) => {
    try {
      console.log(`üåê API Call: GET /groups/${groupId}/location-preferences`);
      const response = await api.get(`/groups/${groupId}/location-preferences`);
      console.log('‚úÖ K·∫øt qu·∫£ l·∫•y location preferences:', response.data);
      return response.data;
    } catch (error) {
      console.error('‚ùå L·ªói khi l·∫•y location preferences:', error);
      throw error;
    }
  },

  // L∆∞u location v√† preferences c·ªßa user trong m·ªôt group
  saveUserLocationPreferences: async (groupId, data) => {
    try {
      console.log(`üåê API Call: POST/PUT /groups/${groupId}/location-preferences`);
      console.log('üì§ Data g·ª≠i l√™n:', data);
      
      const response = await api.post(`/groups/${groupId}/location-preferences`, data);
      console.log('‚úÖ K·∫øt qu·∫£ l∆∞u location preferences:', response.data);
      
      // X√≥a cache suggestions cho nh√≥m n√†y v√¨ d·ªØ li·ªáu ƒë√£ thay ƒë·ªïi
      if (response.data.success) {
        SuggestionService.clearSuggestionsCache(groupId);
        console.log('üóëÔ∏è ƒê√£ x√≥a cache suggestions do c·∫≠p nh·∫≠t location/preferences');
      }
      
      return response.data;
    } catch (error) {
      console.error('‚ùå L·ªói khi l∆∞u location preferences:', error);
      throw error;
    }
  },

  // L·∫•y location v√† preferences c·ªßa t·∫•t c·∫£ th√†nh vi√™n trong group
  getGroupLocationPreferences: async (groupId) => {
    try {
      console.log(`üåê API Call: GET /groups/${groupId}/all-location-preferences`);
      const response = await api.get(`/groups/${groupId}/all-location-preferences`);
      console.log('‚úÖ K·∫øt qu·∫£ l·∫•y group location preferences:', response.data);
      return response.data;
    } catch (error) {
      console.error('‚ùå L·ªói khi l·∫•y group location preferences:', error);
      throw error;
    }
  }
};

export default locationPreferenceService; 