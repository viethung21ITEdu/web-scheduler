const nodemailer = require('nodemailer');

// C·∫•u h√¨nh email transporter
const createTransporter = () => {
  // S·ª≠ d·ª•ng Gmail SMTP (c√≥ th·ªÉ thay ƒë·ªïi theo nhu c·∫ßu)
  return nodemailer.createTransport({
    service: 'gmail',
    auth: {
      user: process.env.EMAIL_USER || 'your-email@gmail.com',
      pass: process.env.EMAIL_PASS || 'your-app-password'
    }
  });
};

// Template email th√¥ng b√°o s·ª± ki·ªán - phi√™n b·∫£n chuy√™n nghi·ªáp
const createEventNotificationTemplate = (eventData, groupData, customContent = null) => {
  const { name, venue, time } = eventData;
  const { name: groupName } = groupData;
  
  // S·ª≠ d·ª•ng custom content n·∫øu c√≥, ng∆∞·ª£c l·∫°i d√πng m·∫∑c ƒë·ªãnh
  const emailSubject = customContent?.subject || `S·ª± ki·ªán m·ªõi: ${name}`;
  const emailSubtitle = customContent?.subtitle || 'Nh√≥m tr∆∞·ªüng v·ª´a t·∫°o m·ªôt s·ª± ki·ªán m·ªõi. H√£y xem th√¥ng tin chi ti·∫øt v√† chu·∫©n b·ªã tham gia!';
  const customMessage = customContent?.customMessage || '';
  
  // T·∫°o m√£ ƒë∆°n h√†ng gi·∫£
  const eventCode = `EV${Date.now().toString().slice(-8)}`;
  const currentDate = new Date().toLocaleDateString('vi-VN');
  
  return {
    subject: emailSubject,
    html: `
      <!DOCTYPE html>
      <html lang="vi">
      <head>
        <meta charset="UTF-8">
        <meta name="viewport" content="width=device-width, initial-scale=1.0">
        <title>${emailSubject}</title>
        <style>
          * { margin: 0; padding: 0; box-sizing: border-box; }
          body { font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif; background-color: #f5f5f5; }
          .container { max-width: 680px; margin: 20px auto; background: white; border-radius: 8px; overflow: hidden; box-shadow: 0 4px 12px rgba(0,0,0,0.1); }
          .header { background: linear-gradient(135deg, #2563eb 0%, #1d4ed8 100%); color: white; padding: 30px 40px; text-align: center; }
          .header h1 { font-size: 28px; font-weight: 700; margin-bottom: 8px; }
          .content { padding: 40px; }
          .greeting { font-size: 16px; color: #374151; margin-bottom: 24px; }
          .event-details { background: #f8fafc; border: 1px solid #e2e8f0; border-radius: 8px; padding: 24px; margin: 20px 0; }
          .event-title { font-size: 20px; font-weight: 600; color: #1f2937; margin-bottom: 16px; }
          .info-table { width: 100%; border-collapse: collapse; margin: 16px 0; }
          .info-table td { padding: 12px 16px; border-bottom: 1px solid #e5e7eb; font-size: 14px; }
          .info-table td:first-child { font-weight: 600; color: #374151; background: #f9fafb; width: 30%; }
          .info-table td:last-child { color: #6b7280; }
          .info-table tr:last-child td { border-bottom: none; }
          .subtitle { font-size: 16px; line-height: 1.6; color: #4b5563; margin: 20px 0; text-align: center; }
          .custom-message { background: #fef3c7; border-left: 4px solid #f59e0b; padding: 16px 20px; margin: 20px 0; border-radius: 0 8px 8px 0; }
          .custom-message-title { font-weight: 600; color: #92400e; margin-bottom: 8px; }
          .custom-message-content { color: #92400e; line-height: 1.5; white-space: pre-line; }
          .cta-container { text-align: center; margin: 32px 0; }
          .cta-button { display: inline-block; background: linear-gradient(135deg, #3b82f6 0%, #2563eb 100%); color: #ffffff !important; padding: 16px 40px; text-decoration: none; border-radius: 8px; font-weight: 700; font-size: 18px; transition: all 0.3s; box-shadow: 0 4px 15px rgba(59, 130, 246, 0.4); border: 2px solid transparent; }
          .cta-button:hover { transform: translateY(-2px); box-shadow: 0 6px 20px rgba(59, 130, 246, 0.6); }
          .divider { height: 1px; background: #e5e7eb; margin: 32px 0; }
          .contact-info { background: #f8fafc; padding: 20px; border-radius: 6px; margin: 20px 0; text-align: center; }
          .contact-info p { color: #6b7280; font-size: 14px; line-height: 1.5; margin: 4px 0; }
          .contact-info .hotline { font-weight: 600; color: #1f2937; font-size: 16px; }
          .footer { background: #1f2937; color: #9ca3af; padding: 24px 40px; text-align: center; font-size: 14px; line-height: 1.5; }
          .footer p { margin: 4px 0; }
          .footer .brand { color: white; font-weight: 600; }
          @media (max-width: 600px) {
            .container { margin: 10px; border-radius: 0; }
            .header, .content, .footer { padding: 20px; }
            .header h1 { font-size: 24px; }
            .info-table td { padding: 8px 12px; font-size: 13px; }
            .info-table td:first-child { width: 40%; }
          }
        </style>
      </head>
      <body>
        <div class="container">
          <!-- Header -->
          <div class="header">
            <h1>S·ª± Ki·ªán M·ªõi ƒê∆∞·ª£c T·∫°o!</h1>
          </div>
          
          <!-- Content -->
          <div class="content">
            <div class="greeting">
              Ch√†o b·∫°n,
            </div>
            
            <p style="color: #4b5563; font-size: 16px; line-height: 1.6; margin-bottom: 24px;">
              Nh√≥m tr∆∞·ªüng c·ªßa nh√≥m <strong>${groupName}</strong> v·ª´a t·∫°o m·ªôt s·ª± ki·ªán m·ªõi. 
              D∆∞·ªõi ƒë√¢y l√† th√¥ng tin chi ti·∫øt v·ªÅ s·ª± ki·ªán:
            </p>

            <!-- Event Details -->
            <div class="event-details">
              <div class="event-title">${name}</div>
              
              <table class="info-table">
                <tr>
                  <td>M√£ s·ª± ki·ªán:</td>
                  <td><strong>${eventCode}</strong></td>
                </tr>
                <tr>
                  <td>Ng√†y t·∫°o:</td>
                  <td>${currentDate}</td>
                </tr>
                <tr>
                  <td>Nh√≥m:</td>
                  <td>${groupName}</td>
                </tr>
                <tr>
                  <td>Th·ªùi gian:</td>
                  <td><strong>${time}</strong></td>
                </tr>
                <tr>
                  <td>ƒê·ªãa ƒëi·ªÉm:</td>
                  <td>${venue || 'S·∫Ω ƒë∆∞·ª£c th√¥ng b√°o sau'}</td>
                </tr>
              </table>
            </div>

            <div class="subtitle">
              ${emailSubtitle}
            </div>

            ${customMessage ? `
            <div class="custom-message">
              <div class="custom-message-title">Th√¥ng tin b·ªï sung:</div>
              <div class="custom-message-content">${customMessage}</div>
            </div>
            ` : ''}

            <!-- CTA Button -->
            <div class="cta-container">
              <a href="${process.env.FRONTEND_URL || 'http://localhost:3000'}/groups/${groupData.group_id}" class="cta-button">
                Xem s·ª± ki·ªán trong nh√≥m
              </a>
            </div>

            <div class="divider"></div>

            <!-- Contact Info -->
            <div class="contact-info">
              <p>H√£y theo d√µi th√¥ng tin c·∫≠p nh·∫≠t v·ªÅ s·ª± ki·ªán n√†y t·ª´ nh√≥m tr∆∞·ªüng.</p>
              <p>Th·ªùi gian v√† ƒë·ªãa ƒëi·ªÉm c·ª• th·ªÉ s·∫Ω ƒë∆∞·ª£c th√¥ng b√°o s·ªõm.</p>
              <br>
              <p>N·∫øu c√≥ b·∫•t k·ª≥ th·∫Øc m·∫Øc n√†o, vui l√≤ng li√™n h·ªá hotline:</p>
              <p class="hotline">1900 XXXX</p>
              <p ho·∫∑c li√™n h·ªá tr∆∞·ªüng nh√≥m.</p>
              <br>
              <p><strong>H√£y s·∫Øp x·∫øp th·ªùi gian ƒë·ªÉ tham gia s·ª± ki·ªán nh√©!</strong></p>
            </div>

            <p style="color: #6b7280; font-size: 16px; margin-top: 32px;">
              Tr√¢n tr·ªçng,<br>
              <strong style="color: #1f2937;">Nh√≥m ${groupName}</strong>
            </p>
          </div>

          <!-- Footer -->
          <div class="footer">
            <p>ƒê√¢y l√† email t·ª± ƒë·ªông, vui l√≤ng kh√¥ng tr·∫£ l·ªùi tr·ª±c ti·∫øp.</p>
            <p class="brand">¬© 2025 H·ªá th·ªëng Qu·∫£n l√Ω S·ª± ki·ªán. B·∫£o l∆∞u m·ªçi quy·ªÅn.</p>
          </div>
        </div>
      </body>
      </html>
    `
  };
};

// G·ª≠i email th√¥ng b√°o s·ª± ki·ªán ƒë·∫øn danh s√°ch ng∆∞·ªùi d√πng
const sendEventNotification = async (eventData, groupData, recipients, customContent = null) => {
  try {
    const transporter = createTransporter();
    const template = createEventNotificationTemplate(eventData, groupData, customContent);
    
    // G·ª≠i email ƒë·∫øn t·ª´ng ng∆∞·ªùi nh·∫≠n
    const emailPromises = recipients.map(async (recipient) => {
      if (!recipient.email) {
        console.warn(`Ng∆∞·ªùi d√πng ${recipient.username} kh√¥ng c√≥ email`);
        return { success: false, email: null, error: 'No email' };
      }
      
      try {
        const mailOptions = {
          from: `"${process.env.EMAIL_SENDER_NAME || 'H·ªá th·ªëng Qu·∫£n l√Ω S·ª± ki·ªán'}" <${process.env.EMAIL_USER || 'your-email@gmail.com'}>`,
          to: recipient.email,
          subject: template.subject,
          html: template.html
        };
        
        const result = await transporter.sendMail(mailOptions);
        console.log(`‚úÖ Email sent to ${recipient.email}:`, result.messageId);
        
        return { 
          success: true, 
          email: recipient.email, 
          messageId: result.messageId 
        };
      } catch (error) {
        console.error(`‚ùå Failed to send email to ${recipient.email}:`, error);
        return { 
          success: false, 
          email: recipient.email, 
          error: error.message 
        };
      }
    });
    
    const results = await Promise.all(emailPromises);
    
    const successCount = results.filter(r => r.success).length;
    const failCount = results.filter(r => !r.success).length;
    
    console.log(`üìß Email notification summary: ${successCount} sent, ${failCount} failed`);
    
    return {
      success: true,
      totalRecipients: recipients.length,
      successCount,
      failCount,
      results
    };
    
  } catch (error) {
    console.error('‚ùå Error in sendEventNotification:', error);
    return {
      success: false,
      error: error.message
    };
  }
};

// Template email x√°c nh·∫≠n tham gia s·ª± ki·ªán
const createEventParticipationConfirmationTemplate = (userData, eventData, groupData) => {
  const currentDate = new Date().toLocaleDateString('vi-VN');
  
  return {
    subject: `X√°c nh·∫≠n tham gia s·ª± ki·ªán: ${eventData.name}`,
    html: `
      <!DOCTYPE html>
      <html lang="vi">
      <head>
        <meta charset="UTF-8">
        <meta name="viewport" content="width=device-width, initial-scale=1.0">
        <title>X√°c nh·∫≠n tham gia s·ª± ki·ªán</title>
        <style>
          * { margin: 0; padding: 0; box-sizing: border-box; }
          body { font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif; background-color: #f5f5f5; }
          .container { max-width: 680px; margin: 20px auto; background: white; border-radius: 8px; overflow: hidden; box-shadow: 0 4px 12px rgba(0,0,0,0.1); }
          .header { background: linear-gradient(135deg, #10b981 0%, #059669 100%); color: white; padding: 30px 40px; text-align: center; }
          .header h1 { font-size: 28px; font-weight: 700; margin-bottom: 8px; }
          .content { padding: 40px; }
          .greeting { font-size: 16px; color: #374151; margin-bottom: 24px; }
          .confirmation-details { background: #ecfdf5; border: 1px solid #a7f3d0; border-radius: 8px; padding: 24px; margin: 20px 0; }
          .info-table { width: 100%; border-collapse: collapse; margin: 16px 0; }
          .info-table td { padding: 12px 16px; border-bottom: 1px solid #e5e7eb; font-size: 14px; }
          .info-table td:first-child { font-weight: 600; color: #374151; background: #f9fafb; width: 30%; }
          .info-table td:last-child { color: #6b7280; }
          .info-table tr:last-child td { border-bottom: none; }
          .success-message { background: #d1fae5; border-left: 4px solid #10b981; padding: 16px 20px; margin: 20px 0; border-radius: 0 8px 8px 0; }
          .success-message-title { font-weight: 600; color: #047857; margin-bottom: 8px; }
          .success-message-content { color: #047857; line-height: 1.5; }
          .cta-container { text-align: center; margin: 32px 0; }
          .cta-button { display: inline-block; background: linear-gradient(135deg, #10b981 0%, #059669 100%); color: #ffffff !important; padding: 16px 40px; text-decoration: none; border-radius: 8px; font-weight: 700; font-size: 18px; transition: all 0.3s; box-shadow: 0 4px 15px rgba(16, 185, 129, 0.4); border: 2px solid transparent; }
          .cta-button:hover { transform: translateY(-2px); box-shadow: 0 6px 20px rgba(16, 185, 129, 0.6); }
          .divider { height: 1px; background: #e5e7eb; margin: 32px 0; }
          .contact-info { background: #f8fafc; padding: 20px; border-radius: 6px; margin: 20px 0; text-align: center; }
          .contact-info p { color: #6b7280; font-size: 14px; line-height: 1.5; margin: 4px 0; }
          .contact-info .hotline { font-weight: 600; color: #1f2937; font-size: 16px; }
          .footer { background: #1f2937; color: #9ca3af; padding: 24px 40px; text-align: center; font-size: 14px; line-height: 1.5; }
          .footer p { margin: 4px 0; }
          .footer .brand { color: white; font-weight: 600; }
          @media (max-width: 600px) {
            .container { margin: 10px; border-radius: 0; }
            .header, .content, .footer { padding: 20px; }  
            .header h1 { font-size: 24px; }
            .info-table td { padding: 8px 12px; font-size: 13px; }
            .info-table td:first-child { width: 40%; }
          }
        </style>
      </head>
      <body>
        <div class="container">
          <!-- Header -->
          <div class="header">
            <h1>X√°c Nh·∫≠n Tham Gia Th√†nh C√¥ng!</h1>
          </div>
          
          <!-- Content -->
          <div class="content">
            <div class="greeting">
              Ch√†o ${userData.full_name || userData.username},
            </div>
            
            <p style="color: #4b5563; font-size: 16px; line-height: 1.6; margin-bottom: 24px;">
              B·∫°n ƒë√£ x√°c nh·∫≠n tham gia s·ª± ki·ªán <strong>"${eventData.name}"</strong> trong nh√≥m <strong>${groupData.name}</strong> th√†nh c√¥ng!
              D∆∞·ªõi ƒë√¢y l√† th√¥ng tin chi ti·∫øt:
            </p>

                         <!-- Confirmation Details -->
             <div class="confirmation-details">
               <table class="info-table">
                 <tr>
                   <td>Ng√†y x√°c nh·∫≠n:</td>
                   <td>${currentDate}</td>
                 </tr>
                <tr>
                  <td>S·ª± ki·ªán:</td>
                  <td><strong>${eventData.name}</strong></td>
                </tr>
                <tr>
                  <td>Nh√≥m:</td>
                  <td>${groupData.name}</td>
                </tr>
                <tr>
                  <td>Th·ªùi gian:</td>
                  <td>${eventData.time || 'S·∫Ω ƒë∆∞·ª£c th√¥ng b√°o sau'}</td>
                </tr>
                <tr>
                  <td>ƒê·ªãa ƒëi·ªÉm:</td>
                  <td>${eventData.venue || 'S·∫Ω ƒë∆∞·ª£c th√¥ng b√°o sau'}</td>
                </tr>
              </table>
            </div>

            <div class="success-message">
              <div class="success-message-title">üéâ Tuy·ªát v·ªùi!</div>
              <div class="success-message-content">
                B·∫°n ƒë√£ ch√≠nh th·ª©c tr·ªü th√†nh th√†nh vi√™n tham gia s·ª± ki·ªán n√†y. 
                Ch√∫ng t√¥i s·∫Ω g·ª≠i th√¥ng tin c·∫≠p nh·∫≠t v√† nh·∫Øc nh·ªü v·ªÅ s·ª± ki·ªán qua email.
              </div>
            </div>

            <!-- CTA Button -->
            <div class="cta-container">
              <a href="${process.env.FRONTEND_URL || 'http://localhost:3000'}/groups/${groupData.group_id}" class="cta-button">
                Xem chi ti·∫øt s·ª± ki·ªán
              </a>
            </div>

            <div class="divider"></div>

            <!-- Contact Info -->
            <div class="contact-info">
              <p>H√£y theo d√µi th√¥ng tin c·∫≠p nh·∫≠t v·ªÅ s·ª± ki·ªán t·ª´ nh√≥m tr∆∞·ªüng.</p>
              <p>Ch√∫ng t√¥i s·∫Ω th√¥ng b√°o n·∫øu c√≥ thay ƒë·ªïi v·ªÅ th·ªùi gian ho·∫∑c ƒë·ªãa ƒëi·ªÉm.</p>
              <br>
              <p>N·∫øu c√≥ b·∫•t k·ª≥ th·∫Øc m·∫Øc n√†o, vui l√≤ng li√™n h·ªá hotline:</p>
              <p class="hotline">1900 XXXX</p>
              <p>ho·∫∑c li√™n h·ªá tr∆∞·ªüng nh√≥m.</p>
              <br>
              <p><strong>C·∫£m ∆°n b·∫°n ƒë√£ tham gia!</strong></p>
            </div>

            <p style="color: #6b7280; font-size: 16px; margin-top: 32px;">
              Tr√¢n tr·ªçng,<br>
              <strong style="color: #1f2937;">Nh√≥m ${groupData.name}</strong>
            </p>
          </div>

          <!-- Footer -->
          <div class="footer">
            <p>ƒê√¢y l√† email t·ª± ƒë·ªông, vui l√≤ng kh√¥ng tr·∫£ l·ªùi tr·ª±c ti·∫øp.</p>
            <p class="brand">¬© 2025 H·ªá th·ªëng Qu·∫£n l√Ω S·ª± ki·ªán. B·∫£o l∆∞u m·ªçi quy·ªÅn.</p>
          </div>
        </div>
      </body>
      </html>
    `
  };
};

// Template email th√¥ng b√°o ƒë·∫∑t ch·ªó ƒë∆∞·ª£c duy·ªát
const createBookingApprovedTemplate = (eventData, groupData, enterpriseData, bookingData) => {
  const currentDate = new Date().toLocaleDateString('vi-VN');
  
  return {
    subject: `ƒê·∫∑t ch·ªó ƒë√£ duy·ªát - S·ª± ki·ªán: ${eventData.name}`,
    html: `
      <!DOCTYPE html>
      <html lang="vi">
      <head>
        <meta charset="UTF-8">
        <meta name="viewport" content="width=device-width, initial-scale=1.0">
        <title>ƒê·∫∑t ch·ªó ƒë∆∞·ª£c duy·ªát</title>
        <style>
          * { margin: 0; padding: 0; box-sizing: border-box; }
          body { font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif; background-color: #f5f5f5; }
          .container { max-width: 680px; margin: 20px auto; background: white; border-radius: 8px; overflow: hidden; box-shadow: 0 4px 12px rgba(0,0,0,0.1); }
          .header { background: linear-gradient(135deg, #f59e0b 0%, #d97706 100%); color: white; padding: 30px 40px; text-align: center; }
          .header h1 { font-size: 28px; font-weight: 700; margin-bottom: 8px; }
          .content { padding: 40px; }
          .greeting { font-size: 16px; color: #374151; margin-bottom: 24px; }
          .booking-details { background: #fef3c7; border: 1px solid #fbbf24; border-radius: 8px; padding: 24px; margin: 20px 0; }
          .info-table { width: 100%; border-collapse: collapse; margin: 16px 0; }
          .info-table td { padding: 12px 16px; border-bottom: 1px solid #e5e7eb; font-size: 14px; }
          .info-table td:first-child { font-weight: 600; color: #374151; background: #f9fafb; width: 30%; }
          .info-table td:last-child { color: #6b7280; }
          .info-table tr:last-child td { border-bottom: none; }
          .success-message { background: #d1fae5; border-left: 4px solid #10b981; padding: 16px 20px; margin: 20px 0; border-radius: 0 8px 8px 0; }
          .success-message-title { font-weight: 600; color: #047857; margin-bottom: 8px; }
          .success-message-content { color: #047857; line-height: 1.5; }
          .cta-container { text-align: center; margin: 32px 0; }
          .cta-button { display: inline-block; background: linear-gradient(135deg, #f59e0b 0%, #d97706 100%); color: #ffffff !important; padding: 16px 40px; text-decoration: none; border-radius: 8px; font-weight: 700; font-size: 18px; transition: all 0.3s; box-shadow: 0 4px 15px rgba(245, 158, 11, 0.4); border: 2px solid transparent; }
          .cta-button:hover { transform: translateY(-2px); box-shadow: 0 6px 20px rgba(245, 158, 11, 0.6); }
          .divider { height: 1px; background: #e5e7eb; margin: 32px 0; }
          .contact-info { background: #f8fafc; padding: 20px; border-radius: 6px; margin: 20px 0; text-align: center; }
          .contact-info p { color: #6b7280; font-size: 14px; line-height: 1.5; margin: 4px 0; }
          .contact-info .hotline { font-weight: 600; color: #1f2937; font-size: 16px; }
          .footer { background: #1f2937; color: #9ca3af; padding: 24px 40px; text-align: center; font-size: 14px; line-height: 1.5; }
          .footer p { margin: 4px 0; }
          .footer .brand { color: white; font-weight: 600; }
          @media (max-width: 600px) {
            .container { margin: 10px; border-radius: 0; }
            .header, .content, .footer { padding: 20px; }  
            .header h1 { font-size: 24px; }
            .info-table td { padding: 8px 12px; font-size: 13px; }
            .info-table td:first-child { width: 40%; }
          }
        </style>
      </head>
      <body>
        <div class="container">
          <!-- Header -->
          <div class="header">
            <h1>ƒê·∫∑t Ch·ªó ƒê√£ Duy·ªát!</h1>
          </div>
          
          <!-- Content -->
          <div class="content">
            <div class="greeting">
              Ch√†o c√°c th√†nh vi√™n nh√≥m ${groupData.name},
            </div>
            
            <p style="color: #4b5563; font-size: 16px; line-height: 1.6; margin-bottom: 24px;">
              Tin vui! Doanh nghi·ªáp <strong>"${enterpriseData.name}"</strong> ƒë√£ ch·∫•p nh·∫≠n ƒë·∫∑t ch·ªó cho s·ª± ki·ªán <strong>"${eventData.name}"</strong>.
              D∆∞·ªõi ƒë√¢y l√† th√¥ng tin chi ti·∫øt:
            </p>

            <!-- Booking Details -->
            <div class="booking-details">
              <table class="info-table">
                <tr>
                  <td>Ng√†y duy·ªát:</td>
                  <td>${currentDate}</td>
                </tr>
                <tr>
                  <td>S·ª± ki·ªán:</td>
                  <td><strong>${eventData.name}</strong></td>
                </tr>
                <tr>
                  <td>Nh√≥m:</td>
                  <td>${groupData.name}</td>
                </tr>
                <tr>
                  <td>Doanh nghi·ªáp:</td>
                  <td><strong>${enterpriseData.name}</strong></td>
                </tr>
                <tr>
                  <td>ƒê·ªãa ƒëi·ªÉm:</td>
                  <td>${enterpriseData.address}</td>
                </tr>
                <tr>
                  <td>Th·ªùi gian:</td>
                  <td><strong>${bookingData.booking_time}</strong></td>
                </tr>
                <tr>
                  <td>S·ªë ng∆∞·ªùi:</td>
                  <td>${bookingData.number_of_people} ng∆∞·ªùi</td>
                </tr>
                ${bookingData.notes ? `
                <tr>
                  <td>Ghi ch√∫:</td>
                  <td>${bookingData.notes}</td>
                </tr>
                ` : ''}
              </table>
            </div>

            <div class="success-message">
              <div class="success-message-title">Ch√∫c m·ª´ng!</div>
              <div class="success-message-content">
                ƒê·∫∑t ch·ªó c·ªßa nh√≥m ƒë√£ ƒë∆∞·ª£c x√°c nh·∫≠n. H√£y chu·∫©n b·ªã v√† ƒë·∫øn ƒë√∫ng gi·ªù ƒë·ªÉ c√≥ tr·∫£i nghi·ªám tuy·ªát v·ªùi nh·∫•t!
              </div>
            </div>

            <!-- CTA Button -->
            <div class="cta-container">
              <a href="${process.env.FRONTEND_URL || 'http://localhost:3000'}/groups/${groupData.group_id}" class="cta-button">
                Xem chi ti·∫øt nh√≥m
              </a>
            </div>

            <div class="divider"></div>

            <!-- Contact Info -->
            <div class="contact-info">
              <p>Vui l√≤ng ƒë·∫øn ƒë√∫ng gi·ªù ƒë·ªÉ tham d·ª± s·ª± ki·ªán.</p>
              <p>N·∫øu c√≥ thay ƒë·ªïi, h√£y li√™n h·ªá v·ªõi nh√≥m tr∆∞·ªüng s·ªõm.</p>
              <br>
              <p>N·∫øu c√≥ b·∫•t k·ª≥ th·∫Øc m·∫Øc n√†o, vui l√≤ng li√™n h·ªá hotline:</p>
              <p class="hotline">1900 XXXX</p>
              <p>ho·∫∑c li√™n h·ªá tr∆∞·ªüng nh√≥m.</p>
              <br>
              <p><strong>Ch√∫c c√°c b·∫°n c√≥ nh·ªØng kho·∫£nh kh·∫Øc ƒë√°ng nh·ªõ!</strong></p>
            </div>

            <p style="color: #6b7280; font-size: 16px; margin-top: 32px;">
              Tr√¢n tr·ªçng,<br>
              <strong style="color: #1f2937;">Nh√≥m ${groupData.name}</strong>
            </p>
          </div>

          <!-- Footer -->
          <div class="footer">
            <p>ƒê√¢y l√† email t·ª± ƒë·ªông, vui l√≤ng kh√¥ng tr·∫£ l·ªùi tr·ª±c ti·∫øp.</p>
            <p class="brand">¬© 2025 H·ªá th·ªëng Qu·∫£n l√Ω S·ª± ki·ªán. B·∫£o l∆∞u m·ªçi quy·ªÅn.</p>
          </div>
        </div>
      </body>
      </html>
    `
  };
};

// Template email x√°c nh·∫≠n ƒëƒÉng k√Ω - phi√™n b·∫£n chuy√™n nghi·ªáp  
const createRegistrationConfirmationTemplate = (userData, groupData) => {
  const confirmationCode = `REG${Date.now().toString().slice(-8)}`;
  const currentDate = new Date().toLocaleDateString('vi-VN');
  
  return {
    subject: `‚úÖ X√°c nh·∫≠n ƒëƒÉng k√Ω th√†nh c√¥ng - ${groupData.name}`,
    html: `
      <!DOCTYPE html>
      <html lang="vi">
      <head>
        <meta charset="UTF-8">
        <meta name="viewport" content="width=device-width, initial-scale=1.0">
        <title>X√°c nh·∫≠n ƒëƒÉng k√Ω th√†nh c√¥ng</title>
        <style>
          * { margin: 0; padding: 0; box-sizing: border-box; }
          body { font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif; background-color: #f5f5f5; }
          .container { max-width: 680px; margin: 20px auto; background: white; border-radius: 8px; overflow: hidden; box-shadow: 0 4px 12px rgba(0,0,0,0.1); }
          .header { background: linear-gradient(135deg, #059669 0%, #047857 100%); color: white; padding: 30px 40px; text-align: center; }
          .header h1 { font-size: 28px; font-weight: 700; margin-bottom: 8px; }
          .content { padding: 40px; }
          .greeting { font-size: 16px; color: #374151; margin-bottom: 24px; }
          .registration-details { background: #f0fdf4; border: 1px solid #bbf7d0; border-radius: 8px; padding: 24px; margin: 20px 0; }
          .info-table { width: 100%; border-collapse: collapse; margin: 16px 0; }
          .info-table td { padding: 12px 16px; border-bottom: 1px solid #e5e7eb; font-size: 14px; }
          .info-table td:first-child { font-weight: 600; color: #374151; background: #f9fafb; width: 30%; }
          .info-table td:last-child { color: #6b7280; }
          .info-table tr:last-child td { border-bottom: none; }
          .welcome-message { background: #dbeafe; border-left: 4px solid #3b82f6; padding: 16px 20px; margin: 20px 0; border-radius: 0 8px 8px 0; }
          .welcome-message-title { font-weight: 600; color: #1e40af; margin-bottom: 8px; }
          .welcome-message-content { color: #1e40af; line-height: 1.5; }
          .cta-container { text-align: center; margin: 32px 0; }
          .cta-button { display: inline-block; background: linear-gradient(135deg, #059669 0%, #047857 100%); color: white; padding: 14px 32px; text-decoration: none; border-radius: 6px; font-weight: 600; font-size: 16px; transition: transform 0.2s; }
          .cta-button:hover { transform: translateY(-2px); }
          .divider { height: 1px; background: #e5e7eb; margin: 32px 0; }
          .next-steps { background: #fef3c7; padding: 20px; border-radius: 6px; margin: 20px 0; }
          .next-steps h3 { color: #92400e; margin-bottom: 12px; font-size: 16px; }
          .next-steps ul { color: #92400e; padding-left: 20px; line-height: 1.6; }
          .next-steps li { margin: 8px 0; }
          .footer { background: #1f2937; color: #9ca3af; padding: 24px 40px; text-align: center; font-size: 14px; line-height: 1.5; }
          .footer p { margin: 4px 0; }
          .footer .brand { color: white; font-weight: 600; }
          @media (max-width: 600px) {
            .container { margin: 10px; border-radius: 0; }
            .header, .content, .footer { padding: 20px; }  
            .header h1 { font-size: 24px; }
            .info-table td { padding: 8px 12px; font-size: 13px; }
            .info-table td:first-child { width: 40%; }
          }
        </style>
      </head>
      <body>
        <div class="container">
          <!-- Header -->
          <div class="header">
            <h1>ƒêƒÉng K√Ω Th√†nh C√¥ng!</h1>
          </div>
          
          <!-- Content -->
          <div class="content">
            <div class="greeting">
              Ch√†o ${userData.username || 'b·∫°n'},
            </div>
            
            <p style="color: #4b5563; font-size: 16px; line-height: 1.6; margin-bottom: 24px;">
              Ch√∫c m·ª´ng! B·∫°n ƒë√£ ƒëƒÉng k√Ω th√†nh c√¥ng v√†o h·ªá th·ªëng qu·∫£n l√Ω s·ª± ki·ªán c·ªßa ch√∫ng t√¥i. 
              D∆∞·ªõi ƒë√¢y l√† th√¥ng tin t√†i kho·∫£n c·ªßa b·∫°n:
            </p>

            <!-- Registration Details -->
            <div class="registration-details">
              <table class="info-table">
                <tr>
                  <td>M√£ x√°c nh·∫≠n:</td>
                  <td><strong>${confirmationCode}</strong></td>
                </tr>
                <tr>
                  <td>Ng√†y ƒëƒÉng k√Ω:</td>
                  <td>${currentDate}</td>
                </tr>
                <tr>
                  <td>T√™n ƒëƒÉng nh·∫≠p:</td>
                  <td><strong>${userData.username}</strong></td>
                </tr>
                <tr>
                  <td>Email:</td>
                  <td>${userData.email}</td>
                </tr>
                <tr>
                  <td>Nh√≥m tham gia:</td>
                  <td><strong>${groupData.name}</strong></td>
                </tr>
              </table>
            </div>

            <div class="welcome-message">
              <div class="welcome-message-title">Ch√†o m·ª´ng b·∫°n ƒë·∫øn v·ªõi c·ªông ƒë·ªìng!</div>
              <div class="welcome-message-content">
                B·∫°n hi·ªán ƒë√£ l√† th√†nh vi√™n c·ªßa nh√≥m "${groupData.name}". 
                H√£y kh√°m ph√° c√°c t√≠nh nƒÉng v√† tham gia v√†o nh·ªØng ho·∫°t ƒë·ªông th√∫ v·ªã s·∫Øp t·ªõi!
              </div>
            </div>

            <!-- CTA Button -->
            <div class="cta-container">
              <a href="${process.env.FRONTEND_URL || 'http://localhost:3000'}/login" class="cta-button">
                ƒêƒÉng nh·∫≠p ngay
              </a>
            </div>

            <div class="divider"></div>

            <!-- Next Steps -->
            <div class="next-steps">
              <h3>B∆∞·ªõc ti·∫øp theo c·ªßa b·∫°n:</h3>
              <ol>
                <li>ƒêƒÉng nh·∫≠p v√†o h·ªá th·ªëng b·∫±ng t√†i kho·∫£n ƒë√£ t·∫°o</li>
                <li>C·∫≠p nh·∫≠t th√¥ng tin c√° nh√¢n trong ph·∫ßn H·ªì s∆°</li>
                <li>Tham gia c√°c s·ª± ki·ªán do nh√≥m t·ªï ch·ª©c</li>
                <li>K·∫øt n·ªëi v·ªõi c√°c th√†nh vi√™n kh√°c trong nh√≥m</li>
                <li>Theo d√µi th√¥ng b√°o v·ªÅ c√°c ho·∫°t ƒë·ªông m·ªõi</li>
              </ol>
            </div>

            <p style="color: #6b7280; font-size: 16px; margin-top: 32px;">
              N·∫øu b·∫°n c√≥ b·∫•t k·ª≥ c√¢u h·ªèi n√†o, ƒë·ª´ng ng·∫ßn ng·∫°i li√™n h·ªá v·ªõi ch√∫ng t√¥i.<br><br>
              Tr√¢n tr·ªçng,<br>
              <strong style="color: #1f2937;">ƒê·ªôi ng≈© H·ªá th·ªëng Qu·∫£n l√Ω S·ª± ki·ªán</strong>
            </p>
          </div>

          <!-- Footer -->
          <div class="footer">
            <p>ƒê√¢y l√† email t·ª± ƒë·ªông, vui l√≤ng kh√¥ng tr·∫£ l·ªùi tr·ª±c ti·∫øp.</p>
            <p class="brand">¬© 2025 H·ªá th·ªëng Qu·∫£n l√Ω S·ª± ki·ªán. B·∫£o l∆∞u m·ªçi quy·ªÅn.</p>
          </div>
        </div>
      </body>
      </html>
    `
  };
};

// G·ª≠i email x√°c nh·∫≠n tham gia s·ª± ki·ªán
const sendEventParticipationConfirmation = async (userData, eventData, groupData) => {
  try {
    if (!userData.email) {
      console.warn(`Ng∆∞·ªùi d√πng ${userData.username} kh√¥ng c√≥ email`);
      return { success: false, error: 'No email' };
    }

    const transporter = createTransporter();
    const template = createEventParticipationConfirmationTemplate(userData, eventData, groupData);
    
    const mailOptions = {
      from: `"${process.env.EMAIL_SENDER_NAME || 'H·ªá th·ªëng Qu·∫£n l√Ω S·ª± ki·ªán'}" <${process.env.EMAIL_USER || 'your-email@gmail.com'}>`,
      to: userData.email,
      subject: template.subject,
      html: template.html
    };
    
    const result = await transporter.sendMail(mailOptions);
    console.log(`‚úÖ Event participation confirmation email sent to ${userData.email}:`, result.messageId);
    
    return { 
      success: true, 
      email: userData.email, 
      messageId: result.messageId 
    };
    
  } catch (error) {
    console.error(`‚ùå Failed to send event participation confirmation to ${userData.email}:`, error);
    return { 
      success: false, 
      email: userData.email, 
      error: error.message 
    };
  }
};

// G·ª≠i email th√¥ng b√°o ƒë·∫∑t ch·ªó ƒë∆∞·ª£c duy·ªát
const sendBookingApprovedNotification = async (eventData, groupData, enterpriseData, bookingData, participantEmails) => {
  try {
    if (!participantEmails || participantEmails.length === 0) {
      console.log('No participants to notify');
      return { success: false, error: 'No participants' };
    }

    const transporter = createTransporter();
    const template = createBookingApprovedTemplate(eventData, groupData, enterpriseData, bookingData);
    
    // Send to all participants
    const sendPromises = participantEmails.map(async (email) => {
      try {
        const mailOptions = {
          from: `"${process.env.EMAIL_SENDER_NAME || 'H·ªá th·ªëng Qu·∫£n l√Ω S·ª± ki·ªán'}" <${process.env.EMAIL_USER || 'your-email@gmail.com'}>`,
          to: email,
          subject: template.subject,
          html: template.html
        };

        const result = await transporter.sendMail(mailOptions);
        return { email, success: true, messageId: result.messageId };
      } catch (error) {
        console.error(`Failed to send to ${email}:`, error);
        return { email, success: false, error: error.message };
      }
    });

    const results = await Promise.all(sendPromises);
    const successCount = results.filter(r => r.success).length;
    
    console.log(`‚úÖ Booking approved notification emails sent to ${successCount}/${participantEmails.length} participants`);
    
    return {
      success: true,
      totalEmails: participantEmails.length,
      successCount,
      results
    };
    
  } catch (error) {
    console.error('‚ùå Failed to send booking approved notification emails:', error);
    return {
      success: false,
      error: error.message
    };
  }
};

// G·ª≠i email x√°c nh·∫≠n ƒëƒÉng k√Ω
const sendRegistrationConfirmation = async (userData, groupData) => {
  try {
    if (!userData.email) {
      console.warn(`Ng∆∞·ªùi d√πng ${userData.username} kh√¥ng c√≥ email`);
      return { success: false, error: 'No email' };
    }

    const transporter = createTransporter();
    const template = createRegistrationConfirmationTemplate(userData, groupData);
    
    const mailOptions = {
      from: `"${process.env.EMAIL_SENDER_NAME || 'H·ªá th·ªëng Qu·∫£n l√Ω S·ª± ki·ªán'}" <${process.env.EMAIL_USER || 'your-email@gmail.com'}>`,
      to: userData.email,
      subject: template.subject,
      html: template.html
    };
    
    const result = await transporter.sendMail(mailOptions);
    console.log(`‚úÖ Registration confirmation email sent to ${userData.email}:`, result.messageId);
    
    return { 
      success: true, 
      email: userData.email, 
      messageId: result.messageId 
    };
    
  } catch (error) {
    console.error(`‚ùå Failed to send registration confirmation to ${userData.email}:`, error);
    return { 
      success: false, 
      email: userData.email, 
      error: error.message 
    };
  }
};

// Template email reset password
const createPasswordResetTemplate = (userData, resetCode) => {
  const currentDate = new Date().toLocaleDateString('vi-VN');
  
  return {
    subject: `üîê M√£ kh√¥i ph·ª•c m·∫≠t kh·∫©u - ${process.env.EMAIL_SENDER_NAME || 'H·ªá th·ªëng Qu·∫£n l√Ω S·ª± ki·ªán'}`,
    html: `
      <!DOCTYPE html>
      <html lang="vi">
      <head>
        <meta charset="UTF-8">
        <meta name="viewport" content="width=device-width, initial-scale=1.0">
        <title>M√£ kh√¥i ph·ª•c m·∫≠t kh·∫©u</title>
        <style>
          * { margin: 0; padding: 0; box-sizing: border-box; }
          body { font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif; background-color: #f5f5f5; }
          .container { max-width: 680px; margin: 20px auto; background: white; border-radius: 8px; overflow: hidden; box-shadow: 0 4px 12px rgba(0,0,0,0.1); }
          .header { background: linear-gradient(135deg, #dc2626 0%, #b91c1c 100%); color: white; padding: 30px 40px; text-align: center; }
          .header h1 { font-size: 28px; font-weight: 700; margin-bottom: 8px; }
          .content { padding: 40px; }
          .greeting { font-size: 16px; color: #374151; margin-bottom: 24px; }
          .reset-code-section { background: #fef2f2; border: 2px solid #fecaca; border-radius: 12px; padding: 32px; margin: 24px 0; text-align: center; }
          .reset-code-title { font-size: 20px; font-weight: 600; color: #dc2626; margin-bottom: 16px; }
          .reset-code { font-size: 36px; font-weight: 800; color: #dc2626; letter-spacing: 8px; background: white; padding: 16px 24px; border-radius: 8px; border: 2px dashed #dc2626; margin: 16px 0; font-family: 'Courier New', monospace; }
          .info-table { width: 100%; border-collapse: collapse; margin: 16px 0; }
          .info-table td { padding: 12px 16px; border-bottom: 1px solid #e5e7eb; font-size: 14px; }
          .info-table td:first-child { font-weight: 600; color: #374151; background: #f9fafb; width: 30%; }
          .info-table td:last-child { color: #6b7280; }
          .info-table tr:last-child td { border-bottom: none; }
          .warning { background: #fef3c7; border-left: 4px solid #f59e0b; padding: 16px 20px; margin: 20px 0; border-radius: 0 8px 8px 0; }
          .warning-title { font-weight: 600; color: #92400e; margin-bottom: 8px; }
          .warning-content { color: #92400e; line-height: 1.5; }
          .instructions { background: #f0f9ff; border: 1px solid #bae6fd; border-radius: 8px; padding: 20px; margin: 20px 0; }
          .instructions-title { font-weight: 600; color: #0369a1; margin-bottom: 12px; }
          .instructions-list { color: #0369a1; }
          .instructions-list li { margin: 8px 0; }
          .contact-info { background: #f8fafc; padding: 20px; border-radius: 6px; margin: 20px 0; text-align: center; }
          .contact-info p { color: #6b7280; font-size: 14px; line-height: 1.5; margin: 4px 0; }
          .footer { background: #1f2937; color: #9ca3af; padding: 24px 40px; text-align: center; font-size: 14px; line-height: 1.5; }
          .footer p { margin: 4px 0; }
          .footer .brand { color: white; font-weight: 600; }
          @media (max-width: 600px) {
            .container { margin: 10px; border-radius: 0; }
            .header, .content, .footer { padding: 20px; }
            .header h1 { font-size: 24px; }
            .reset-code { font-size: 28px; letter-spacing: 4px; padding: 12px 16px; }
            .info-table td { padding: 8px 12px; font-size: 13px; }
            .info-table td:first-child { width: 40%; }
          }
        </style>
      </head>
      <body>
        <div class="container">
          <!-- Header -->
          <div class="header">
            <h1>üîê M√£ Kh√¥i Ph·ª•c M·∫≠t Kh·∫©u</h1>
          </div>
          
          <!-- Content -->
          <div class="content">
            <div class="greeting">
              Ch√†o ${userData.full_name || userData.username},
            </div>
            
            <p style="color: #4b5563; font-size: 16px; line-height: 1.6; margin-bottom: 24px;">
              Ch√∫ng t√¥i nh·∫≠n ƒë∆∞·ª£c y√™u c·∫ßu kh√¥i ph·ª•c m·∫≠t kh·∫©u cho t√†i kho·∫£n c·ªßa b·∫°n. S·ª≠ d·ª•ng m√£ kh√¥i ph·ª•c b√™n d∆∞·ªõi ƒë·ªÉ ƒë·∫∑t l·∫°i m·∫≠t kh·∫©u.
            </p>

            <!-- Reset Code Section -->
            <div class="reset-code-section">
              <div class="reset-code-title">M√£ kh√¥i ph·ª•c c·ªßa b·∫°n</div>
              <div class="reset-code">${resetCode}</div>
              
              <table class="info-table">
                <tr>
                  <td>T√†i kho·∫£n:</td>
                  <td><strong>${userData.username}</strong></td>
                </tr>
                <tr>
                  <td>Email:</td>
                  <td>${userData.email}</td>
                </tr>
                <tr>
                  <td>Th·ªùi gian y√™u c·∫ßu:</td>
                  <td>${currentDate}</td>
                </tr>
                <tr>
                  <td>Hi·ªáu l·ª±c:</td>
                  <td><strong>15 ph√∫t</strong></td>
                </tr>
              </table>
            </div>

            <!-- Instructions -->
            <div class="instructions">
              <div class="instructions-title">üìã H∆∞·ªõng d·∫´n s·ª≠ d·ª•ng:</div>
              <ol class="instructions-list">
                <li>Quay l·∫°i trang web v√† ch·ªçn "ƒê√£ c√≥ m√£ kh√¥i ph·ª•c"</li>
                <li>Nh·∫≠p m√£ <strong>${resetCode}</strong> v√†o √¥ "M√£ kh√¥i ph·ª•c"</li>
                <li>Nh·∫≠p m·∫≠t kh·∫©u m·ªõi v√† x√°c nh·∫≠n</li>
                <li>Nh·∫•n "ƒê·∫∑t l·∫°i m·∫≠t kh·∫©u" ƒë·ªÉ ho√†n t·∫•t</li>
              </ol>
            </div>

            <div class="warning">
              <div class="warning-title">‚ö†Ô∏è L∆∞u √Ω quan tr·ªçng:</div>
              <div class="warning-content">
                M√£ kh√¥i ph·ª•c n√†y ch·ªâ c√≥ hi·ªáu l·ª±c trong <strong>15 ph√∫t</strong> k·ªÉ t·ª´ th·ªùi ƒëi·ªÉm g·ª≠i email. N·∫øu b·∫°n kh√¥ng th·ª±c hi·ªán y√™u c·∫ßu n√†y, vui l√≤ng b·ªè qua email n√†y.
              </div>
            </div>

            <!-- Contact Info -->
            <div class="contact-info">
              <p>N·∫øu b·∫°n g·∫∑p v·∫•n ƒë·ªÅ, vui l√≤ng li√™n h·ªá support ƒë·ªÉ ƒë∆∞·ª£c h·ªó tr·ª£.</p>
            </div>

            <p style="color: #6b7280; font-size: 16px; margin-top: 32px;">
              Tr√¢n tr·ªçng,<br>
              <strong style="color: #1f2937;">ƒê·ªôi ng≈© h·ªó tr·ª£</strong>
            </p>
          </div>

          <!-- Footer -->
          <div class="footer">
            <p>ƒê√¢y l√† email t·ª± ƒë·ªông, vui l√≤ng kh√¥ng tr·∫£ l·ªùi tr·ª±c ti·∫øp.</p>
            <p class="brand">¬© 2025 H·ªá th·ªëng Qu·∫£n l√Ω S·ª± ki·ªán. B·∫£o l∆∞u m·ªçi quy·ªÅn.</p>
          </div>
        </div>
      </body>
      </html>
    `
  };
};

// G·ª≠i email reset password
const sendPasswordResetEmail = async (userData, resetCode) => {
  try {
    if (!userData.email) {
      console.warn(`Ng∆∞·ªùi d√πng ${userData.username} kh√¥ng c√≥ email`);
      return { success: false, error: 'No email' };
    }

    const transporter = createTransporter();
    const template = createPasswordResetTemplate(userData, resetCode);
    
    const mailOptions = {
      from: `"${process.env.EMAIL_SENDER_NAME || 'H·ªá th·ªëng Qu·∫£n l√Ω S·ª± ki·ªán'}" <${process.env.EMAIL_USER || 'your-email@gmail.com'}>`,
      to: userData.email,
      subject: template.subject,
      html: template.html
    };
    
    const result = await transporter.sendMail(mailOptions);
    console.log(`‚úÖ Password reset email sent to ${userData.email}:`, result.messageId);
    
    return { 
      success: true, 
      email: userData.email, 
      messageId: result.messageId 
    };
    
  } catch (error) {
    console.error(`‚ùå Failed to send password reset email to ${userData.email}:`, error);
    return { 
      success: false, 
      email: userData.email, 
      error: error.message 
    };
  }
};

// Template email th√¥ng b√°o ƒë·∫∑t ch·ªó m·ªõi cho doanh nghi·ªáp
const createNewBookingNotificationTemplate = (bookingData, eventData, groupData, leaderData) => {
  const bookingCode = `BK${Date.now().toString().slice(-8)}`;
  const currentDate = new Date().toLocaleDateString('vi-VN');
  
  return {
    subject: `üîî ƒê∆°n ƒë·∫∑t ch·ªó m·ªõi - ${eventData.name}`,
    html: `
      <!DOCTYPE html>
      <html lang="vi">
      <head>
        <meta charset="UTF-8">
        <meta name="viewport" content="width=device-width, initial-scale=1.0">
        <title>ƒê∆°n ƒë·∫∑t ch·ªó m·ªõi</title>
        <style>
          * { margin: 0; padding: 0; box-sizing: border-box; }
          body { font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif; background-color: #f5f5f5; }
          .container { max-width: 680px; margin: 20px auto; background: white; border-radius: 8px; overflow: hidden; box-shadow: 0 4px 12px rgba(0,0,0,0.1); }
          .header { background: linear-gradient(135deg, #f59e0b 0%, #d97706 100%); color: white; padding: 30px 40px; text-align: center; }
          .header h1 { font-size: 28px; font-weight: 700; margin-bottom: 8px; }
          .content { padding: 40px; }
          .greeting { font-size: 16px; color: #374151; margin-bottom: 24px; }
          .booking-details { background: #fef3c7; border: 1px solid #fbbf24; border-radius: 8px; padding: 24px; margin: 20px 0; }
          .booking-title { font-size: 20px; font-weight: 600; color: #92400e; margin-bottom: 16px; }
          .info-table { width: 100%; border-collapse: collapse; margin: 16px 0; }
          .info-table td { padding: 12px 16px; border-bottom: 1px solid #e5e7eb; font-size: 14px; }
          .info-table td:first-child { font-weight: 600; color: #374151; background: #f9fafb; width: 30%; }
          .info-table td:last-child { color: #6b7280; }
          .info-table tr:last-child td { border-bottom: none; }
          .status-pending { background: #fef3c7; color: #92400e; padding: 6px 12px; border-radius: 20px; font-size: 12px; font-weight: 600; }
          .action-needed { background: #fef2f2; border-left: 4px solid #ef4444; padding: 16px 20px; margin: 20px 0; border-radius: 0 8px 8px 0; }
          .action-needed-title { font-weight: 600; color: #dc2626; margin-bottom: 8px; }
          .action-needed-content { color: #b91c1c; line-height: 1.5; }
          .cta-container { text-align: center; margin: 32px 0; }
          .cta-button { display: inline-block; background: linear-gradient(135deg, #f59e0b 0%, #d97706 100%); color: #ffffff !important; padding: 16px 40px; text-decoration: none; border-radius: 8px; font-weight: 700; font-size: 18px; transition: all 0.3s; box-shadow: 0 4px 15px rgba(245, 158, 11, 0.4); }
          .cta-button:hover { transform: translateY(-2px); box-shadow: 0 6px 20px rgba(245, 158, 11, 0.6); }
          .divider { height: 1px; background: #e5e7eb; margin: 32px 0; }
          .contact-info { background: #f8fafc; padding: 20px; border-radius: 6px; margin: 20px 0; text-align: center; }
          .contact-info p { color: #6b7280; font-size: 14px; line-height: 1.5; margin: 4px 0; }
          .footer { background: #1f2937; color: #9ca3af; padding: 24px 40px; text-align: center; font-size: 14px; line-height: 1.5; }
          .footer p { margin: 4px 0; }
          .footer .brand { color: white; font-weight: 600; }
          @media (max-width: 600px) {
            .container { margin: 10px; border-radius: 0; }
            .header, .content, .footer { padding: 20px; }
            .header h1 { font-size: 24px; }
            .info-table td { padding: 8px 12px; font-size: 13px; }
            .info-table td:first-child { width: 40%; }
          }
        </style>
      </head>
      <body>
        <div class="container">
          <!-- Header -->
          <div class="header">
            <h1>ƒê∆°n ƒê·∫∑t Ch·ªó M·ªõi!</h1>
          </div>
          
          <!-- Content -->
          <div class="content">
            <div class="greeting">
              Ch√†o b·∫°n,
            </div>
            
            <p style="color: #4b5563; font-size: 16px; line-height: 1.6; margin-bottom: 24px;">
              B·∫°n v·ª´a nh·∫≠n ƒë∆∞·ª£c m·ªôt ƒë∆°n ƒë·∫∑t ch·ªó m·ªõi t·ª´ kh√°ch h√†ng.
            </p>

            <!-- Booking Details -->
            <div class="booking-details">
              <div class="booking-title">Chi ti·∫øt ƒë∆°n ƒë·∫∑t ch·ªó</div>
              
              <table class="info-table">
                <tr>
                  <td>M√£ ƒë·∫∑t ch·ªó:</td>
                  <td><strong>${bookingCode}</strong></td>
                </tr>
                <tr>
                  <td>Ng√†y ƒë·∫∑t:</td>
                  <td>${currentDate}</td>
                </tr>
                <tr>
                  <td>Tr·∫°ng th√°i:</td>
                  <td><span class="status-pending">CH·ªú DUY·ªÜT</span></td>
                </tr>
                <tr>
                  <td>S·ª± ki·ªán:</td>
                  <td><strong>${eventData.name}</strong></td>
                </tr>
                <tr>
                  <td>Nh√≥m:</td>
                  <td>${groupData.name}</td>
                </tr>
                <tr>
                  <td>Ng∆∞·ªùi ƒë·∫∑t:</td>
                  <td>${leaderData.full_name || leaderData.username}</td>
                </tr>
                <tr>
                  <td>S·ªë l∆∞·ª£ng ng∆∞·ªùi:</td>
                  <td><strong>${bookingData.number_of_people} ng∆∞·ªùi</strong></td>
                </tr>
                <tr>
                  <td>Th·ªùi gian:</td>
                  <td>${bookingData.booking_time}</td>
                </tr>
                ${bookingData.notes ? `
                <tr>
                  <td>Ghi ch√∫:</td>
                  <td>${bookingData.notes}</td>
                </tr>
                ` : ''}
              </table>
            </div>

            <div class="action-needed">
              <div class="action-needed-title">‚ö†Ô∏è C·∫ßn x·ª≠ l√Ω:</div>
              <div class="action-needed-content">
                ƒê∆°n ƒë·∫∑t ch·ªó n√†y ƒëang ch·ªù b·∫°n duy·ªát. Vui l√≤ng ƒëƒÉng nh·∫≠p v√†o h·ªá th·ªëng ƒë·ªÉ xem chi ti·∫øt v√† ph√™ duy·ªát ƒë∆°n ƒë·∫∑t ch·ªó.
              </div>
            </div>

            <!-- CTA Button -->
            <div class="cta-container">
              <a href="${process.env.FRONTEND_URL || 'http://localhost:5173'}/enterprise/bookings" class="cta-button">
                Xem v√† duy·ªát ƒë∆°n ƒë·∫∑t ch·ªó
              </a>
            </div>

            <div class="divider"></div>

            <!-- Contact Info -->
            <div class="contact-info">
              <p>B·∫°n c√≥ th·ªÉ li√™n h·ªá tr·ª±c ti·∫øp v·ªõi ng∆∞·ªùi ƒë·∫∑t ch·ªó n·∫øu c·∫ßn th√¥ng tin th√™m.</p>
              <p><strong>Th√¥ng tin li√™n h·ªá:</strong></p>
              <p>Email: ${leaderData.email || 'Ch∆∞a c·∫≠p nh·∫≠t'}</p>
              <p>SƒêT: ${leaderData.phone || 'Ch∆∞a c·∫≠p nh·∫≠t'}</p>
            </div>

            <p style="color: #6b7280; font-size: 16px; margin-top: 32px;">
              Tr√¢n tr·ªçng,<br>
              <strong style="color: #1f2937;">H·ªá th·ªëng Qu·∫£n l√Ω S·ª± ki·ªán</strong>
            </p>
          </div>

          <!-- Footer -->
          <div class="footer">
            <p>ƒê√¢y l√† email t·ª± ƒë·ªông, vui l√≤ng kh√¥ng tr·∫£ l·ªùi tr·ª±c ti·∫øp.</p>
            <p class="brand">¬© 2025 H·ªá th·ªëng Qu·∫£n l√Ω S·ª± ki·ªán. B·∫£o l∆∞u m·ªçi quy·ªÅn.</p>
          </div>
        </div>
      </body>
      </html>
    `
  };
};

// G·ª≠i email th√¥ng b√°o ƒë·∫∑t ch·ªó m·ªõi cho doanh nghi·ªáp
const sendNewBookingNotification = async (bookingData, eventData, groupData, leaderData, enterpriseEmail) => {
  try {
    if (!enterpriseEmail) {
      console.warn('Enterprise kh√¥ng c√≥ email');
      return { success: false, error: 'No enterprise email' };
    }

    const transporter = createTransporter();
    const template = createNewBookingNotificationTemplate(bookingData, eventData, groupData, leaderData);
    
    const mailOptions = {
      from: `"${process.env.EMAIL_SENDER_NAME || 'H·ªá th·ªëng Qu·∫£n l√Ω S·ª± ki·ªán'}" <${process.env.EMAIL_USER || 'your-email@gmail.com'}>`,
      to: enterpriseEmail,
      subject: template.subject,
      html: template.html
    };
    
    const result = await transporter.sendMail(mailOptions);
    console.log(`‚úÖ New booking notification email sent to ${enterpriseEmail}:`, result.messageId);
    
    return { 
      success: true, 
      email: enterpriseEmail, 
      messageId: result.messageId 
    };
    
  } catch (error) {
    console.error(`‚ùå Failed to send new booking notification to ${enterpriseEmail}:`, error);
    return { 
      success: false, 
      email: enterpriseEmail, 
      error: error.message 
    };
  }
};

// Test email connection
const testEmailConnection = async () => {
  try {
    console.log('üîç Testing email connection...');
    console.log('EMAIL_USER:', process.env.EMAIL_USER ? 'SET' : 'NOT SET');
    console.log('EMAIL_PASS:', process.env.EMAIL_PASS ? 'SET' : 'NOT SET');
    
    if (!process.env.EMAIL_USER || !process.env.EMAIL_PASS) {
      console.error('‚ùå Email credentials not configured in .env file');
      return false;
    }
    
    const transporter = createTransporter();
    await transporter.verify();
    console.log('‚úÖ Email service is ready');
    return true;
  } catch (error) {
    console.error('‚ùå Email service error:', error.message);
    console.error('‚ùå Full error:', error);
    return false;
  }
};

// G·ª≠i l·ªùi m·ªùi tham gia nh√≥m qua email
const sendGroupInvite = async (recipientEmail, groupName, inviteCode, inviterName) => {
  try {
    const transporter = createTransporter();
    
    // T·∫°o link tham gia
    const joinLink = `${process.env.FRONTEND_URL || 'http://localhost:5173'}/join/${inviteCode}`;
    
    // Template email
    const mailOptions = {
      from: process.env.EMAIL_USER || 'noreply@webscheduler.com',
      to: recipientEmail,
      subject: `L·ªùi m·ªùi tham gia nh√≥m "${groupName}"`,
      html: `
        <div style="font-family: Arial, sans-serif; max-width: 600px; margin: 0 auto;">
          <h2 style="color: #8B5CF6;">L·ªùi m·ªùi tham gia nh√≥m</h2>
          
          <p>Xin ch√†o!</p>
          
          <p><strong>${inviterName}</strong> ƒë√£ m·ªùi b·∫°n tham gia nh√≥m <strong>"${groupName}"</strong> tr√™n Web Scheduler.</p>
          
          <div style="background-color: #F3F4F6; padding: 20px; border-radius: 8px; margin: 20px 0;">
            <p style="margin: 0; font-size: 16px;">
              Nh·∫•n v√†o n√∫t b√™n d∆∞·ªõi ƒë·ªÉ tham gia nh√≥m:
            </p>
          </div>
          
          <div style="text-align: center; margin: 30px 0;">
            <a href="${joinLink}" 
               style="background-color: #8B5CF6; color: white; padding: 12px 24px; 
                      text-decoration: none; border-radius: 6px; font-weight: bold;
                      display: inline-block;">
              Tham gia nh√≥m
            </a>
          </div>
          
          <p style="color: #6B7280; font-size: 14px;">
            Ho·∫∑c copy link sau v√†o tr√¨nh duy·ªát:<br>
            <a href="${joinLink}" style="color: #8B5CF6;">${joinLink}</a>
          </p>
          
          <hr style="border: none; border-top: 1px solid #E5E7EB; margin: 30px 0;">
          
          <p style="color: #6B7280; font-size: 12px;">
            Link n√†y s·∫Ω h·∫øt h·∫°n sau 7 ng√†y. N·∫øu b·∫°n kh√¥ng mu·ªën nh·∫≠n email n√†y, 
            vui l√≤ng b·ªè qua.
          </p>
          
          <p style="color: #6B7280; font-size: 12px;">
            ¬© 2024 Web Scheduler. All rights reserved.
          </p>
        </div>
      `
    };
    
    // G·ª≠i email
    const result = await transporter.sendMail(mailOptions);
    console.log('Email sent successfully:', result.messageId);
    
    return {
      success: true,
      messageId: result.messageId
    };
    
  } catch (error) {
    console.error('Error sending email:', error);
    return {
      success: false,
      error: error.message
    };
  }
};

// Template email x√°c th·ª±c ƒëƒÉng k√Ω
const createEmailVerificationTemplate = (userData, verificationCode) => {
  const currentDate = new Date().toLocaleDateString('vi-VN');
  
  return {
    subject: `üîê M√£ x√°c th·ª±c email - ${process.env.EMAIL_SENDER_NAME || 'H·ªá th·ªëng Qu·∫£n l√Ω S·ª± ki·ªán'}`,
    html: `
      <!DOCTYPE html>
      <html lang="vi">
      <head>
        <meta charset="UTF-8">
        <meta name="viewport" content="width=device-width, initial-scale=1.0">
        <title>X√°c th·ª±c email ƒëƒÉng k√Ω</title>
        <style>
          * { margin: 0; padding: 0; box-sizing: border-box; }
          body { font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif; background-color: #f5f5f5; }
          .container { max-width: 680px; margin: 20px auto; background: white; border-radius: 8px; overflow: hidden; box-shadow: 0 4px 12px rgba(0,0,0,0.1); }
          .header { background: linear-gradient(135deg, #10b981 0%, #059669 100%); color: white; padding: 30px 40px; text-align: center; }
          .header h1 { font-size: 28px; font-weight: 700; margin-bottom: 8px; }
          .content { padding: 40px; }
          .greeting { font-size: 16px; color: #374151; margin-bottom: 24px; }
          .verification-code-section { background: #f0fdf4; border: 2px solid #bbf7d0; border-radius: 12px; padding: 32px; margin: 24px 0; text-align: center; }
          .verification-code-title { font-size: 20px; font-weight: 600; color: #059669; margin-bottom: 16px; }
          .verification-code { font-size: 36px; font-weight: 800; color: #059669; letter-spacing: 8px; background: white; padding: 16px 24px; border-radius: 8px; border: 2px dashed #059669; margin: 16px 0; font-family: 'Courier New', monospace; }
          .info-table { width: 100%; border-collapse: collapse; margin: 16px 0; }
          .info-table td { padding: 12px 16px; border-bottom: 1px solid #e5e7eb; font-size: 14px; }
          .info-table td:first-child { font-weight: 600; color: #374151; background: #f9fafb; width: 30%; }
          .info-table td:last-child { color: #6b7280; }
          .info-table tr:last-child td { border-bottom: none; }
          .warning { background: #fef3c7; border-left: 4px solid #f59e0b; padding: 16px 20px; margin: 20px 0; border-radius: 0 8px 8px 0; }
          .warning-title { font-weight: 600; color: #92400e; margin-bottom: 8px; }
          .warning-content { color: #92400e; line-height: 1.5; }
          .instructions { background: #f0f9ff; border: 1px solid #bae6fd; border-radius: 8px; padding: 20px; margin: 20px 0; }
          .instructions-title { font-weight: 600; color: #0369a1; margin-bottom: 12px; }
          .instructions-list { color: #0369a1; }
          .instructions-list li { margin: 8px 0; }
          .contact-info { background: #f8fafc; padding: 20px; border-radius: 6px; margin: 20px 0; text-align: center; }
          .contact-info p { color: #6b7280; font-size: 14px; line-height: 1.5; margin: 4px 0; }
          .footer { background: #1f2937; color: #9ca3af; padding: 24px 40px; text-align: center; font-size: 14px; line-height: 1.5; }
          .footer p { margin: 4px 0; }
          .footer .brand { color: white; font-weight: 600; }
          @media (max-width: 600px) {
            .container { margin: 10px; border-radius: 0; }
            .header, .content, .footer { padding: 20px; }
            .header h1 { font-size: 24px; }
            .verification-code { font-size: 28px; letter-spacing: 4px; padding: 12px 16px; }
            .info-table td { padding: 8px 12px; font-size: 13px; }
            .info-table td:first-child { width: 40%; }
          }
        </style>
      </head>
      <body>
        <div class="container">
          <!-- Header -->
          <div class="header">
            <h1>üéâ Ch√†o m·ª´ng b·∫°n ƒë·∫øn v·ªõi h·ªá th·ªëng!</h1>
            <p>X√°c th·ª±c email ƒë·ªÉ ho√†n t·∫•t ƒëƒÉng k√Ω</p>
          </div>
          
          <!-- Content -->
          <div class="content">
            <div class="greeting">
              Ch√†o <strong>${userData.username}</strong>!
            </div>
            
            <p style="color: #4b5563; font-size: 16px; line-height: 1.6; margin-bottom: 24px;">
              C·∫£m ∆°n b·∫°n ƒë√£ ƒëƒÉng k√Ω t√†i kho·∫£n! ƒê·ªÉ ho√†n t·∫•t qu√° tr√¨nh ƒëƒÉng k√Ω v√† k√≠ch ho·∫°t t√†i kho·∫£n, vui l√≤ng s·ª≠ d·ª•ng m√£ x√°c th·ª±c b√™n d∆∞·ªõi.
            </p>

            <!-- Verification Code Section -->
            <div class="verification-code-section">
              <div class="verification-code-title">M√£ x√°c th·ª±c c·ªßa b·∫°n</div>
              <div class="verification-code">${verificationCode}</div>
              
              <table class="info-table">
                <tr>
                  <td>T√†i kho·∫£n:</td>
                  <td><strong>${userData.username}</strong></td>
                </tr>
                <tr>
                  <td>Email:</td>
                  <td>${userData.email}</td>
                </tr>
                <tr>
                  <td>Th·ªùi gian ƒëƒÉng k√Ω:</td>
                  <td>${currentDate}</td>
                </tr>
                <tr>
                  <td>Hi·ªáu l·ª±c:</td>
                  <td><strong>15 ph√∫t</strong></td>
                </tr>
              </table>
            </div>

            <!-- Instructions -->
            <div class="instructions">
              <div class="instructions-title">üìã H∆∞·ªõng d·∫´n x√°c th·ª±c:</div>
              <ol class="instructions-list">
                <li>Quay l·∫°i trang ƒëƒÉng k√Ω tr√™n website</li>
                <li>Nh·∫≠p m√£ x√°c th·ª±c <strong>${verificationCode}</strong> v√†o √¥ ƒë∆∞·ª£c y√™u c·∫ßu</li>
                <li>Nh·∫•n "X√°c th·ª±c email" ƒë·ªÉ ho√†n t·∫•t ƒëƒÉng k√Ω</li>
                <li>B·∫°n c√≥ th·ªÉ ƒëƒÉng nh·∫≠p ngay sau khi x√°c th·ª±c th√†nh c√¥ng</li>
              </ol>
            </div>

            <div class="warning">
              <div class="warning-title">‚ö†Ô∏è L∆∞u √Ω quan tr·ªçng:</div>
              <div class="warning-content">
                M√£ x√°c th·ª±c n√†y ch·ªâ c√≥ hi·ªáu l·ª±c trong <strong>15 ph√∫t</strong> k·ªÉ t·ª´ th·ªùi ƒëi·ªÉm g·ª≠i email. N·∫øu m√£ h·∫øt h·∫°n, b·∫°n c√≥ th·ªÉ y√™u c·∫ßu g·ª≠i l·∫°i m√£ m·ªõi.
              </div>
            </div>

            <!-- Contact Info -->
            <div class="contact-info">
              <p>N·∫øu b·∫°n g·∫∑p v·∫•n ƒë·ªÅ, vui l√≤ng li√™n h·ªá support ƒë·ªÉ ƒë∆∞·ª£c h·ªó tr·ª£.</p>
            </div>

            <p style="color: #6b7280; font-size: 16px; margin-top: 32px;">
              Tr√¢n tr·ªçng,<br>
              <strong style="color: #1f2937;">ƒê·ªôi ng≈© h·ªó tr·ª£</strong>
            </p>
          </div>

          <!-- Footer -->
          <div class="footer">
            <p>ƒê√¢y l√† email t·ª± ƒë·ªông, vui l√≤ng kh√¥ng tr·∫£ l·ªùi tr·ª±c ti·∫øp.</p>
            <p class="brand">¬© 2025 H·ªá th·ªëng Qu·∫£n l√Ω S·ª± ki·ªán. B·∫£o l∆∞u m·ªçi quy·ªÅn.</p>
          </div>
        </div>
      </body>
      </html>
    `
  };
};

// G·ª≠i email x√°c th·ª±c ƒëƒÉng k√Ω
const sendEmailVerification = async (userData, verificationCode) => {
  try {
    if (!userData.email) {
      console.warn(`Ng∆∞·ªùi d√πng ${userData.username} kh√¥ng c√≥ email`);
      return { success: false, error: 'No email' };
    }

    const transporter = createTransporter();
    const template = createEmailVerificationTemplate(userData, verificationCode);
    
    const mailOptions = {
      from: `"${process.env.EMAIL_SENDER_NAME || 'H·ªá th·ªëng Qu·∫£n l√Ω S·ª± ki·ªán'}" <${process.env.EMAIL_USER || 'your-email@gmail.com'}>`,
      to: userData.email,
      subject: template.subject,
      html: template.html
    };
    
    const result = await transporter.sendMail(mailOptions);
    console.log(`‚úÖ Email verification sent to ${userData.email}:`, result.messageId);
    
    return { 
      success: true, 
      email: userData.email, 
      messageId: result.messageId 
    };
    
  } catch (error) {
    console.error(`‚ùå Failed to send email verification to ${userData.email}:`, error);
    return { 
      success: false, 
      email: userData.email, 
      error: error.message 
    };
  }
};

module.exports = {
  sendEventNotification,
  sendEventParticipationConfirmation,
  sendRegistrationConfirmation,
  sendBookingApprovedNotification,
  testEmailConnection,
  sendGroupInvite,
  sendNewBookingNotification,
  sendPasswordResetEmail,
  sendEmailVerification
}; 